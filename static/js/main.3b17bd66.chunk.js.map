{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","onNameInput","event","setState","name","target","value","onEmailInput","email","onOpenPolicy","state","isActive","onSendButton","preventDefault","fetch","method","mode","headers","body","JSON","stringify","this","className","id","htmlFor","type","onChange","e","onClick","readOnly","style","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA6EeA,E,kDAzEb,aAAe,IAAD,8BACZ,gBAQFC,YAAc,SAACC,GACb,EAAKC,SAAS,CAACC,KAAMF,EAAMG,OAAOC,SAVtB,EAadC,aAAe,SAACL,GACd,EAAKC,SAAS,CAACK,MAAON,EAAMG,OAAOC,SAdvB,EAiBdG,aAAe,WACV,EAAKC,MAAMC,SACZ,EAAKR,SAAS,CAACQ,UAAU,IAEzB,EAAKR,SAAS,CAACQ,UAAU,KArBf,EAyBdC,aAAe,SAACV,GACdA,EAAMW,iBAENC,MADY,qHACD,CACTC,OAAQ,OACRC,KAAM,UACNC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBhB,KAAM,EAAKM,MAAMN,KACjBI,MAAO,EAAKE,MAAMF,WAhCxB,EAAKE,MAAQ,CACXN,KAAM,GACNI,MAAO,GACPG,UAAU,GALA,E,0CAsCd,WAAU,IAAD,OACDA,EAAWU,KAAKX,MAAMC,SAC5B,OACE,qBAAKW,UAAU,MAAf,SACE,sBAAMA,UAAU,eAAhB,SACE,uBAAMA,UAAU,iBAAhB,UACE,2BAAUC,GAAG,eAAeD,UAAU,4BAAtC,UACE,wBAAQA,UAAU,iBAAlB,qCACA,sBAAKA,UAAU,MAAf,UACE,uBAAOA,UAAU,oBAAoBE,QAAQ,gBAA7C,mBACA,uBAAOF,UAAU,qEAAqEG,KAAK,QAAQrB,KAAK,gBAAiBmB,GAAG,gBAAgBG,SAAU,SAACC,GAAO,EAAKpB,aAAaoB,SAElL,sBAAKL,UAAU,MAAf,UACE,uBAAOA,UAAU,oBAAoBE,QAAQ,OAA7C,kBACA,uBAAOF,UAAU,uEAAuEG,KAAK,OAAOrB,KAAK,OAAQmB,GAAG,OAAOG,SAAU,SAACC,GAAO,EAAK1B,YAAY0B,YAIlK,sBAAKJ,GAAG,gBAAR,UACE,oBAAID,UAAU,UAAUM,QAAS,kBAAM,EAAKnB,gBAA5C,6BAECE,GAAY,0BAAUkB,UAAQ,EAACC,MAAO,CAAC,MAAS,MAAO,OAAU,SAAUxB,MAAM,wgCAGlF,uBACF,wBAAQgB,UAAU,uEAAuEP,OAAO,OAAOa,QAAS,SAAC1B,GAAD,OAAW,EAAKU,aAAaV,IAA7I,qC,GAhEM6B,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b17bd66.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      isActive: false,\n    }\n  }\n\n  onNameInput = (event) => {\n    this.setState({name: event.target.value});\n  }\n\n  onEmailInput = (event) => {\n    this.setState({email: event.target.value});\n  }\n\n  onOpenPolicy = () => {\n    if(this.state.isActive) {\n      this.setState({isActive: false})\n    } else {\n      this.setState({isActive: true})\n    }\n  }\n\n  onSendButton = (event) => {\n    event.preventDefault()\n    const url = 'https://script.google.com/macros/s/AKfycbxqe_oou9hfEj5uPV27-xjhznblN7P4iTrztqSsMsnf_n2t_4SxTuHE02mpMGcZGGg8Ow/exec';\n    fetch(url, {\n      method: 'post',\n      mode: 'no-cors',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n      })\n    })\n  }\n  render() {\n    const isActive = this.state.isActive;\n    return (\n      <div className=\"App\">\n        <main className=\"pa4 black-80\">\n          <form className=\"measure center\">\n            <fieldset id=\"mail-collect\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f4 fw6 ph0 mh0\">Collecting Email &amp; Name</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" onChange={(e) => {this.onEmailInput(e)}} />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">name</label>\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"name\" name=\"name\"  id=\"name\" onChange={(e) => {this.onNameInput(e)}} />\n              </div>\n            </fieldset>\n            \n            <div id=\"policy-accord\" >\n              <h1 className=\"pointer\" onClick={() => this.onOpenPolicy()}>Terms of Policy</h1>\n              \n              {isActive && <textarea readOnly style={{'width': '70%', 'height': '10rem'}} value='Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat laudantium eveniet velit vitae reiciendis, doloribus tenetur magnam consequuntur consectetur iusto corrupti quis porro inventore veritatis hic nam obcaecati exercitationem natus.Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat laudantium eveniet velit vitae reiciendis, doloribus tenetur magnam consequuntur consectetur iusto corrupti quis porro inventore veritatis hic nam obcaecati exercitationem natus.Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat laudantium eveniet velit vitae reiciendis, doloribus tenetur magnam consequuntur consectetur iusto corrupti quis porro inventore veritatis hic nam obcaecati exercitationem natus.Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat laudantium eveniet velit vitae reiciendis, doloribus tenetur magnam consequuntur consectetur iusto corrupti quis porro inventore veritatis hic nam obcaecati exercitationem natus.Lorem ipsum dolor sit amet consectetur adipisicing elit.'></textarea> \n              }  \n            </div>\n              <br/>\n            <button className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" method='post' onClick={(event) => this.onSendButton(event)}>Agree &amp; Send</button>\n          </form>\n        </main>\n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}